const OUTPUT_FILE_NAME = "podcast.xml";
// xmlファイルの出力フォルダーのID指定
const FOLDER_ID = "<xmlファイルの出力フォルダーのID指定>";
// 1行目 が「title, pubDate, audioUrl, size, type, url」の並びのシート名を指定
const SHEET_NAME = "シート1";

function run() {
  const values = SpreadsheetApp.getActiveSpreadsheet()
    .getSheetByName(SHEET_NAME)
    .getDataRange()
    .getValues();
  const folder = DriveApp.getFolderById(FOLDER_ID);

  const outText = createFeedText(folder.getName(), values);

  writeOutput(folder, outText);
  folder.setSharing(DriveApp.Access.ANYONE, DriveApp.Permission.VIEW);
}

const writeOutput = (folder: GoogleAppsScript.Drive.Folder, output: string) => {
  const fileIterator = folder.getFilesByName(OUTPUT_FILE_NAME);
  const files: GoogleAppsScript.Drive.File[] = [];
  while (fileIterator.hasNext()) {
    files.push(fileIterator.next());
  }
  if (files.length == 1) {
    // 上書き
    files[0].setContent(output);
    return files[0];
  } else {
    // 新規作成
    const outFile = DriveApp.createFile(OUTPUT_FILE_NAME, output);
    folder.addFile(outFile);
    DriveApp.getRootFolder().removeFile(outFile);
    return outFile;
  }
};

const createFeedText = (name: string, values: any[][]): string => {
  const channel = XmlService.createElement("channel");
  channel.addContent(XmlService.createElement("title").setText(name));
  const itunesNs = XmlService.getNamespace(
    "itunes",
    "http://www.itunes.com/dtds/podcast-1.0.dtd"
  );
  channel.addContent(
    XmlService.createElement("subtitle", itunesNs).setText(
      "Generated by spreadsheet-podcast"
    )
  );

  // 1行目削除
  values.shift();

  for (const value of values) {
    const title = value[0];
    const pubDate = value[1];
    const audioUrl = value[2];
    const size = value[3];
    const type = value[4];
    const url = value[5];
    if (!title || title === "#N/A") {
      continue;
    }

    const item = XmlService.createElement("item");
    item.addContent(XmlService.createElement("title").setText(title));
    item.addContent(XmlService.createElement("link").setText(url));
    item.addContent(XmlService.createElement("pubDate").setText(pubDate));
    const enclosure = XmlService.createElement("enclosure");
    enclosure.setAttribute("url", audioUrl);
    enclosure.setAttribute("length", size);
    enclosure.setAttribute("type", type);
    item.addContent(enclosure);
    channel.addContent(item);
  }

  const rss = XmlService.createElement("rss").setAttribute("version", "2.0");
  rss.addContent(channel);
  return XmlService.getPrettyFormat().format(XmlService.createDocument(rss));
};
